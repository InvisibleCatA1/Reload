package com.invisiblecat.reload.module.modules.exploit;

import com.invisiblecat.reload.Reload;
import com.invisiblecat.reload.event.EventTarget;
import com.invisiblecat.reload.event.events.EventJoinWorld;
import com.invisiblecat.reload.event.events.EventRecivePacket;
import com.invisiblecat.reload.event.events.EventSendPacket;
import com.invisiblecat.reload.event.events.EventUpdate;
import com.invisiblecat.reload.module.Category;
import com.invisiblecat.reload.module.Module;
import com.invisiblecat.reload.setting.settings.ModeSetting;
import com.invisiblecat.reload.setting.settings.NumberSetting;
import com.invisiblecat.reload.utils.NumberUtils;
import com.invisiblecat.reload.utils.PacketUtils;
import com.invisiblecat.reload.utils.TimerUtils;
import com.mojang.realmsclient.gui.ChatFormatting;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.*;
import net.minecraft.network.play.server.S2EPacketCloseWindow;
import net.minecraft.network.play.server.S31PacketWindowProperty;

public class Disabler extends Module {

    private final TimerUtils lagDelay = new TimerUtils();
    private final TimerUtils delay1 = new TimerUtils();

    private int count = 0;
    private int count1 = 0;

    private final ModeSetting mode = new ModeSetting("Mode", "Blocks MC Movement", "Blocks MC Combat", "Mineplex Combat", "Blocks MC Movement");


    public Disabler() {
        super("Disabler", 0, Category.EXPLOIT, AutoDisable.NONE);
        this.addSettings(mode);
    }

    @EventTarget
    public void onUpdate(EventUpdate event) {
        this.setDisplayName("Disabler " + ChatFormatting.GRAY + mode.getSelected());
    }

    @EventTarget
    public void onPacket(EventSendPacket event) {
        Packet packet = event.getPacket();

        switch (mode.getSelected().toLowerCase().replaceAll("\\s", "")) {
            case "blocksmccombat":
                if (packet instanceof C0FPacketConfirmTransaction) {
                    if (mc.thePlayer.isDead) {
                        count = 0;
                    }
                    if (count != 0) event.setCancelled(true);
                    count++;
                } else if (packet instanceof C0BPacketEntityAction) {
                    event.setCancelled(true);
                } else if (packet instanceof C00PacketKeepAlive) {
                    ((C00PacketKeepAlive) packet).setKey(((C00PacketKeepAlive) packet).getKey() - ((C00PacketKeepAlive) packet).getKey() / 2);

                }
            case "blocksmcmovement":
                if (packet instanceof C0FPacketConfirmTransaction) {
                    PacketUtils.sendPacket(new C19PacketResourcePackStatus());
                    if (count1 >= 10) {
                        event.setCancelled(true);
                        count1 = 0;
                    } else {
                        count1++;
                    }
                } else if (packet instanceof C03PacketPlayer.C04PacketPlayerPosition && !mc.thePlayer.onGround) {
                    PacketUtils.sendPacket(new C0CPacketInput(0, 0, false, false));
                    if (count1 > 41) {
                        count1 = 0;
                        event.setPacket(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, mc.thePlayer.getAge() % 2 == 0));
                    } else
                        count1++;

                }
        }

    }
}
